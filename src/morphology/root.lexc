! Divvun & Giellatekno - open source grammars for UNDEFINED language
! Copyright © 2012 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@hum.uit.no or divvun@samediggi.no

!! !!!Morphology
! ----------
!! INTRODUCTION TO THE MORPHOLOGICAL ANALYSER OF NENETS


Multichar_Symbols
!! !!Analysis symbols
! ----------------
!! The morphological analyses of wordforms of the TUNDRA NENETS language are presented
!! in this system in terms of following symbols.
!! (It is highly suggested to follow existing standards when adding new tags).
+WORK  !!≈ * __@CODE@__ WORK HAS TO BE DONE Do not remove, replaces +TYÄ
!! The parts-of-speech are:

+N	    !!≈ * __@CODE@__
+A	    !!≈ * __@CODE@__
+Adv    !!≈ * __@CODE@__
+V	    !!≈ * __@CODE@__

+Pron   !!≈ * __@CODE@__
+CS	    !!≈ * __@CODE@__
+CC	    !!≈ * __@CODE@__
+Adp    !!≈ * __@CODE@__
+Po	    !!≈ * __@CODE@__
+Pr	    !!≈ * __@CODE@__
+Interj !!≈ * __@CODE@__
+Pcle   !!≈ * __@CODE@__
+Num    !!≈ * __@CODE@__



!! The parts of speech are further split up into:

+Prop    !!≈ * __@CODE@__
+Pers    !!≈ * __@CODE@__
+Dem     !!≈ * __@CODE@__
+Interr  !!≈ * __@CODE@__
+Refl    !!≈ * __@CODE@__ reflexive
+Recipr  !!≈ * __@CODE@__
+Rel     !!≈ * __@CODE@__
+Indef   !!≈ * __@CODE@__
+Refr    !!≈ * __@CODE@__ referential adverbs


!! Adv
 +Manner  !!≈ * __@CODE@__
 +Refr  !!≈ * __@CODE@__ (referential),
 +Temp !!≈ * __@CODE@__

!! The Usage extents are marked using the following tags:
 +Err/Sub     !!≈ * __@CODE@__
 +Use/-Spell   !!≈ * __@CODE@__
 +Use/SpellNoSugg  !!≈ * __@CODE@__ recognized but not suggested in speller

 +Rus !!≈ * __@CODE@__ (100% Russian homograph)


!! Dialects

 +Dial/W   !!≈ * __@CODE@__ (Western dialects),
 +Dial/T   !!≈ * __@CODE@__ (Taimyr dialect  ),
 +Dial/E   !!≈ * __@CODE@__ (Eastern dialects),


!! The nominals are inflected in the following Case and Number

 +Sg    !!≈ * __@CODE@__
 +Du    !!≈ * __@CODE@__
 +Pl    !!≈ * __@CODE@__
 +Acc   !!≈ * __@CODE@__
 +Gen   !!≈ * __@CODE@__ (Genitive)
 +Abl   !!≈ * __@CODE@__
 +Dat   !!≈ * __@CODE@__
 +Loc   !!≈ * __@CODE@__
 +Nom   !!≈ * __@CODE@__
 +Pros  !!≈ * __@CODE@__ (Prosecutive)
 +Tra   !!≈ * __@CODE@__
 +Abe   !!≈ * __@CODE@__
 +Adc   !!≈ * __@CODE@__
 +Ins   !!≈ * __@CODE@__
 +Apr   !!≈ * __@CODE@__
 +Ine   !!≈ * __@CODE@__
 +Ill   !!≈ * __@CODE@__
 +Ela   !!≈ * __@CODE@__
 +Egr   !!≈ * __@CODE@__
 +Prl   !!≈ * __@CODE@__
 +Pred	!!≈ * __@CODE@__ = predestinative

!! are these needed?:

+Appr   !!≈ * __@CODE@__
+Advc   !!≈ * __@CODE@__
+Ter    !!≈ * __@CODE@__
+Pro    !!≈ * __@CODE@__
+Car    !!≈ * __@CODE@__
+Equ    !!≈ * __@CODE@__

!! derivative suffixes before case endings
+Lim  !!≈ * __@CODE@__ limitative


!! The possession is marked as such:


+PxSg1 !!≈ * __@CODE@__
+PxSg2 !!≈ * __@CODE@__
+PxSg3 !!≈ * __@CODE@__
+PxDu1 !!≈ * __@CODE@__
+PxDu2 !!≈ * __@CODE@__
+PxDu3 !!≈ * __@CODE@__
+PxPl1 !!≈ * __@CODE@__
+PxPl2 !!≈ * __@CODE@__
+PxPl3 !!≈ * __@CODE@__

!! The comparative forms are:
+Pos    !!≈ * __@CODE@__
+Comp   !!≈ * __@CODE@__
+Superl !!≈ * __@CODE@__

!! Numerals are classified under:

+Attr  !!≈ * __@CODE@__
+Card  !!≈ * __@CODE@__
+Ord   !!≈ * __@CODE@__

!! Verb moods are:

+Ind    !!≈ * __@CODE@__
+Pot    !!≈ * __@CODE@__
+Conj   !!≈ * __@CODE@__
+Imprt  !!≈ * __@CODE@__
+Opt    !!≈ * __@CODE@__
+Hort   !!≈ * __@CODE@__
+Mod/appr  !!≈ * __@CODE@__ approximative imperfective
+Mod/des  !!≈ * __@CODE@__ desiderative
+Mod/futappr  !!≈ * __@CODE@__ approximative futuritive
+Mod/hyp  !!≈ * __@CODE@__ hyperprobablitative
+Mod/int  !!≈ * __@CODE@__ interrogative
+Mod/narr  !!≈ * __@CODE@__ narrative
+Mod/nec  !!≈ * __@CODE@__ necessitativee
+Mod/obl  !!≈ * __@CODE@__ obligative
+Mod/rep  !!≈ * __@CODE@__ reputative
+Mod/sup  !!≈ * __@CODE@__ superprobabilitative
+Mod/perfappr  !!≈ * __@CODE@__ approximative perfective
+Mod/perfprob  !!≈ * __@CODE@__ perfective probabilitative
+Mod/prob  !!≈ * __@CODE@__ imperfective probabilitative


!! Verb tenses are:

+Aor   !!≈ * __@CODE@__
+Prt   !!≈ * __@CODE@__
+Prt1  !!≈ * __@CODE@__
+Prt2  !!≈ * __@CODE@__

!! Verb personal forms are:

!! Subject

!! One of the two following

+Sg1  !!≈ * __@CODE@__
+Sg2  !!≈ * __@CODE@__
+Sg3  !!≈ * __@CODE@__
+Pl1  !!≈ * __@CODE@__
+Pl2  !!≈ * __@CODE@__
+Pl3  !!≈ * __@CODE@__

+ScSg1  !!≈ * __@CODE@__
+ScSg2  !!≈ * __@CODE@__
+ScSg3  !!≈ * __@CODE@__
+ScDu1  !!≈ * __@CODE@__
+ScDu2  !!≈ * __@CODE@__
+ScDu3  !!≈ * __@CODE@__
+ScPl1  !!≈ * __@CODE@__
+ScPl2  !!≈ * __@CODE@__
+ScPl3  !!≈ * __@CODE@__

!! Object
+OcSg3  !!≈ * __@CODE@__
+OcDu3  !!≈ * __@CODE@__
+OcPl3  !!≈ * __@CODE@__

!! Other verb forms are

 +InfImprf   !!≈ * __@CODE@__
 +InfPrf     !!≈ * __@CODE@__
 +PrcImprf   !!≈ * __@CODE@__
 +PrcPrf     !!≈ * __@CODE@__
 +PrcNeg     !!≈ * __@CODE@__
 +PrcFut     !!≈ * __@CODE@__
 +GerFin     !!≈ * __@CODE@__
 +Subord     !!≈ * __@CODE@__
 +Aud	     !!≈ * __@CODE@__
 +Evas	     !!≈ * __@CODE@__
 +Ger 	     !!≈ * __@CODE@__
 +ConNeg     !!≈ * __@CODE@__
 +ConNegII   !!≈ * __@CODE@__
 +Neg 	     !!≈ * __@CODE@__
 +ImprtII    !!≈ * __@CODE@__
 +PrsPrc     !!≈ * __@CODE@__
 +Sup 	     !!≈ * __@CODE@__
 +VGen 	     !!≈ * __@CODE@__
 +VAbess     !!≈ * __@CODE@__

!! Abbreviated words are classified with:

 +ABBR  !!≈ * __@CODE@__
 +ACR  !!≈ * __@CODE@__

!! Special symbols are classified with:

+CLB   !!≈ * __@CODE@__
+PUNCT !!≈ * __@CODE@__
+LEFT  !!≈ * __@CODE@__
+RIGHT   !!≈ * __@CODE@__

!! The verbs are syntactically split according to transitivity:

 +TV   !!≈ * __@CODE@__
 +IV  !!≈ * __@CODE@__

 +Aux  !!≈ * __@CODE@__ auxilliary verb

 !+ VR >> Refl ! reflexive verbs


!! Special multiword units are analysed with:

 +Multi  !!≈ * __@CODE@__

!! Non-dictionary words can be recognised with:

 +Guess  !!≈ * __@CODE@__

!! Question and Focus particles:

 +Qst  !!≈ * __@CODE@__
 +Foc  !!≈ * __@CODE@__


!! Semantics are classified with

 +Sem/Mal 	  !!≈ * __@CODE@__
 +Sem/Fem 	  !!≈ * __@CODE@__
 +Sem/Sur 	  !!≈ * __@CODE@__
 +Sem/Plc 	  !!≈ * __@CODE@__
 +Sem/Org	  !!≈ * __@CODE@__
 +Sem/Obj	  !!≈ * __@CODE@__
 +Sem/Ani	  !!≈ * __@CODE@__
 +Sem/Hum	  !!≈ * __@CODE@__
 +Sem/Plant	  !!≈ * __@CODE@__
 +Sem/Group	  !!≈ * __@CODE@__
 +Sem/Time 	  !!≈ * __@CODE@__
 +Sem/Txt	  !!≈ * __@CODE@__
 +Sem/Route	  !!≈ * __@CODE@__
 +Sem/Measr   !!≈ * __@CODE@__
 +Sem/Wthr	  !!≈ * __@CODE@__
 +Sem/Build   !!≈ * __@CODE@__
 +Sem/Edu	  !!≈ * __@CODE@__
 +Sem/Veh	  !!≈ * __@CODE@__
 +Sem/Clth	  !!≈ * __@CODE@__


!! Derivations are classified under the morphophonetic form of the suffix, the
!! source and target part-of-speech.

+V→N   !!≈ * __@CODE@__
+V→V    !!≈ * __@CODE@__
+V→A    !!≈ * __@CODE@__
 +Der/xxx    !!≈ * __@CODE@__
 +Der/MWN   !!≈ * __@CODE@__ modifier without noun head
 +Der/Pr   !!≈ * __@CODE@__ this is used with predication of nominals and deverbal modalities

! +Aud+PxSg1+Der/Pr+Prt1+ScSg3


!! !!Morphophonology
! ---------------

!! To represent phonologic variations in word forms we use the following
!! symbols in the lexicon files:
 %{ая%}    !!≈ * __@CODE@__ in Pros
 %{оё%}    !!≈ * __@CODE@__ in +N+Sg+Nom+PxPl3
 %{рл%}	   !!≈ * __@CODE@__ +N+Sg+Nom+PxSg2

 %{аяуюØ%} !!≈ * __@CODE@__ хан+N+Sg+Acc+PxSg1: ханув, ханав
 %{увм%}   !!≈ * __@CODE@__ +N+Sg+Pros
 %{вм%}	   !!≈ * __@CODE@__ +N+Sg+Nom+PxSg1

!! And following triggers to control variation
 {front}   !!≈ * __@CODE@__
 {back}      !!≈ * __@CODE@__
 %^SCSG2    !!≈ * __@CODE@__ this allows n2d +V+Ind+Aor+ScSg2:%>н°%^SCSG2
 %^PLNOM    !!≈ * __@CODE@__ disallows i2e +N+Pl+Nom+PxDu1+Der/Pr+V+Ind+Aor+ScPl3
 %^PalVariation !!≈ * __@CODE@__ This allows for тарД1%>д%{оё%}нзь

! Protoletters for xfst

 %{ауоэØ%} !!≈ * __@CODE@__  А1:а А1:у А1:о А1:э schwa

 %{ауоэиыØ%} !!≈ * __@CODE@__ before pros

 !! This is the schwa or reduced vowel occurring after x in case endings
 ! -хА1на -хА1д

А2  !!≈ * __@CODE@__ Alternating between zero and а

Д1   !!≈ * __@CODE@__
С1   !!≈ * __@CODE@__
Н1   !!≈ * __@CODE@__
Ӈ1        !!≈ * __@CODE@__ = These are proto-glottals

Г1   !!≈ * __@CODE@__
В1   !!≈ * __@CODE@__
Е1   !!≈ * __@CODE@__
Е2   !!≈ * __@CODE@__
Ы1   !!≈ * __@CODE@__
Ы2  !!≈ * __@CODE@__ = These are for developing underlying morphology rules

!! !!Triggers

 %^A2O  !!≈ * __@CODE@__ Initially this is used for the noun "я" to enable a:o
 %^A2I  !!≈ * __@CODE@__ for я:и in пя
 %^MLenition !!≈ * __@CODE@__ м:в м:б
 %^VowLower !!≈ * __@CODE@__ vowel lowering ы:э у:о
 %^VowRaise !!≈ * __@CODE@__ э:ы о:у
 %^VowLoss  !!≈ * __@CODE@__ stem-final vowel is lost in plural accusative form
 %^StemVowFronting !!≈ * __@CODE@__ хасава:хасев
 %^VowFronting !!≈ * __@CODE@__ хадась:хадэйнинзь
 %^PalLoss  !!≈ * __@CODE@__ in combination with stem-final vowel loss
 %^HardFronting  !!≈ * __@CODE@__ яля:ялэ
%-
%>

!! We have manually optimised the structure of our lexicon using the following
!! flag diacritics to restrict morhpological combinatorics:

@P.NeedNoun.ON@   !!≈ * __@CODE@__
@D.NeedNoun.ON@   !!≈ * __@CODE@__
@C.NeedNoun@    !!≈ * __@CODE@__

!! Object conjugation

@P.CONJ.ObjAll@   !!≈ * __@CODE@__
@R.CONJ.ObjAll@   !!≈ * __@CODE@__
@C.CONJ@	      !!≈ * __@CODE@__


!! !!!The Root lexicon

LEXICON Root

!! The word forms in Nenets start from the lexeme roots of basic
!! word classes, or optionally from prefixes:

   adjectives  ;	    !!≈ * __@CODE@__
   adpositions    ;	    !!≈ * __@CODE@__
   adverbs  ;		    !!≈ * __@CODE@__
   interjections   ;    !!≈ * __@CODE@__
   nouns   ;		    !!≈ * __@CODE@__
   pronouns    ;	    !!≈ * __@CODE@__
   propernouns    ;	    !!≈ * __@CODE@__
   quantifiers    ;	    !!≈ * __@CODE@__
   verbs   ;		    !!≈ * __@CODE@__


   V_NEWWORDS ;		    !!≈ * __@CODE@__ This is for feeding new verbs.
! Acronym ;
! Abbreviation ;
 Punctuation ;          !!≈ * __@CODE@__

CONJUNCTION ;           !!≈ * __@CODE@__
SUBJUNCTION ;           !!≈ * __@CODE@__
INTERJECTION ;          !!≈ * __@CODE@__
POSTPOSITION ;          !!≈ * __@CODE@__


! I INCLUDE SOME SMALL LEXICA HERE
! WAITING FOR OWN FILES, OR PERHAPS THEY COULD STAY HERE

LEXICON CONJUNCTION
но CT ;
нош CT ;

LEXICON CT
+CS: # ;

LEXICON SUBJUNCTION
+CS: # ;

LEXICON INTERJECTION
# ;

LEXICON POSTP_
+Po: K ;

LEXICON NUMBERSUF
+Num: K;
+Num:%> CASESUF ;
+Num:%> ORDINAL ;

LEXICON ORDINAL
+Ord:этӥ K;



LEXICON POSTPOSITION
#;

LEXICON CASESUF
#;
LEXICON PRON
#;
LEXICON DEM
#;
LEXICON PERS
#;

! vim: set ft=xfst-lexc:
