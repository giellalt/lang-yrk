!! Adjective inflection
!! --------------------
!! Nenets ?? adjectives compare.

!!LEXICON Comparisons
!!+A+pos:0        Cases   ;
!!+A+cmp:er       Cases   ;
!!+A+sup:est      Cases   ;

!!This has to be split into various sublexcons.
LEXICON A_Cons
+A: SGNOMSUF ;
+A:а  SG-ACC-STEM ;
+A:  PLNOMSUF ;
+A: PLACCSUF_Zero ;

LEXICON A_ВАДО
 A_МЯДО ;
 
LEXICON A_МЯДО
+A:Д1 SGNOMSUF ;
+A:Д1 SG-ACC-STEM ;
+A:Д1 SG-DAT-STEM ;
+A:Д1 PLNOMSUF ;
+A:Д1 PLACCSUF_О ;

!!This has to be split into various sublexcons.
LEXICON A_Vow
+A: SGNOMSUF ;
+A: SG-ACC-STEM ;
+A: SG-DAT-STEM ;
+A: PLNOMSUF ;
+A: PLACCSUF_О ;

LEXICON SG-ACC-STEM
 SGACCSUF ;
 SGGENSUF ;

LEXICON SG-DAT-STEM
 SGDATSUF ;
 SGLOCSUF ;
 SGABLSUF ;
 SGTRASUF ;
 SGPROSSUF ;
 DUNOMSUF ;
 DUACCSUF ;
 DUGENSUF ;

 PLDATSUF ;
 PLLOCSUF ;
 PLABLSUF ;
 PLTRASUF ;
 POSSESSOR-INDICES ;
+Nom: NOMINAL-CONJUGATION ;

LEXICON SGNOMSUF
+Sg+Nom: K ;

LEXICON SGACCSUF
+Sg+Acc:%>мʼ K ;

LEXICON SGGENSUF
+Sg+Gen:%>ʼ K ;

LEXICON SGDATSUF
+Sg+Dat:%>нʼ K ;

LEXICON SGLOCSUF
+Sg+Loc:%>хА1на K ; !вэсакохона пэдарахана ӈамгэхэна

LEXICON SGABLSUF
+Sg+Abl:%>хА1д K ; !вэсакоход пэдарахад ӈамгэхэд

LEXICON SGPROSSUF
+Sg+Pros:%>мна K ; 

LEXICON SGTRASUF 
+Sg+Tra:%>ӈэ K ;

! These must be checked
LEXICON DUNOMSUF 
!+Du+Nom:%>хА1ʼ K ;
+Du+Nom:%>хʼ K ;

LEXICON DUACCSUF
!+Du+Acc:%>хА1ʼ K ;
+Du+Acc:%>хʼ K ;

LEXICON DUGENSUF 
!+Du+Gen:%>хА1ʼ K ;
+Du+Gen:%>хʼ K ;

!! Start Plural
LEXICON PLNOMSUF
+Pl+Nom:%>ˮ K ;

LEXICON PLACCSUF
+Pl+Acc:%>Ы1 K ; ! We need something to trigger а:и 0:о but retain ы:ы
+Pl+Acc:%>Ы1 PL-ACC_STEM ;

LEXICON PLACCSUF_Minus
:%^VowLoss PL-ACC_STEM ;

LEXICON PLACCSUF_Zero
! This has zero ending
!+Pl+Acc: K ;
 PL-ACC_STEM ;

LEXICON PLACCSUF_О
!+Pl+Acc:%>о  K ; 
:%>о PL-ACC_STEM ;

LEXICON PLDATSUF
+Pl+Dat:%>хА1ˮ K ;
+Pl+Dat:%>хˮ K ;

LEXICON PLLOCSUF
+Pl+Loc:%>хА1ˮна K ;

LEXICON PLABLSUF
+Pl+Abl:%>хА1т K ;

LEXICON PLPROSSUF
+Pl+Pros:%>ˮмана K ;

LEXICON PLTRASUF
+Pl+Tra:%>ˮӈэ K ;


! vim: set ft=xfst-lexc:

