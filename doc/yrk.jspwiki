!!!Free and Open source Nenets analyser gtsvn-yrk

;Authors: Sven-Erik Soosaar and Jack Rueter in cooperation with the Divvun and Giellatekno teams, community members
;Software version: 2012
;Documentation license: GNU GFDL
;SVN Revision: $Revision: 68217 $
;SVN Date: $Date: 2013-01-16 11:31:33 +0200 (Wed, 16 Jan 2013) $

!!!GTSVN-yrk

This is free and open source Nenets morphology.

!!!Morphology
INTRODUCTION TO THE MORPHOLOGICAL ANALYSER OF NENETS


!!Analysis symbols
The morphological analyses of wordforms of the TUNDRA NENETS language are presented
in this system in terms of following symbols.
(It is highly suggested to follow existing standards when adding new tags).
 * __+WORK__ WORK HAS TO BE DONE Do not remove, replaces +TYÄ
The parts-of-speech are:

 * __+N	__
 * __+A	__
 * __+Adv__
 * __+V	__

 * __+Pron__
 * __+CS	__
 * __+CC	__
 * __+Adp__
 * __+Po	__
 * __+Pr	__
 * __+Interj__
 * __+Pcle__
 * __+Num__



The parts of speech are further split up into:

 * __+Prop__
 * __+Pers__
 * __+Dem__
 * __+Interr__
 * __+Refl__ reflexive
 * __+Recipr__
 * __+Rel__
 * __+Indef__
 * __+Refr__ referential adverbs


Adv
 * __+Manner__
 * __+Refr__ (referential),
 * __+Temp__

The Usage extents are marked using the following tags:
 * __+Err/Sub__
 * __+Use/-Spell__
 * __+Use/SpellNoSugg__ recognized but not suggested in speller

 * __+Rus__ (100% Russian homograph)


Dialects

 * __+Dial/W__ (Western dialects),
 * __+Dial/T__ (Taimyr dialect  ),
 * __+Dial/E__ (Eastern dialects),


The nominals are inflected in the following Case and Number

 * __+Sg__
 * __+Du__
 * __+Pl__
 * __+Acc__
 * __+Gen__ (Genitive)
 * __+Abl__
 * __+Dat__
 * __+Loc__
 * __+Nom__
 * __+Pros__ (Prosecutive)
 * __+Tra__
 * __+Abe__
 * __+Adc__
 * __+Ins__
 * __+Apr__
 * __+Ine__
 * __+Ill__
 * __+Ela__
 * __+Egr__
 * __+Prl__
 * __+Pred	__ = predestinative

are these needed?:

 * __+Appr__
 * __+Advc__
 * __+Ter__
 * __+Pro__
 * __+Car__
 * __+Equ__

derivative suffixes before case endings
 * __+Lim__ limitative


The possession is marked as such:


 * __+PxSg1__
 * __+PxSg2__
 * __+PxSg3__
 * __+PxDu1__
 * __+PxDu2__
 * __+PxDu3__
 * __+PxPl1__
 * __+PxPl2__
 * __+PxPl3__

The comparative forms are:
 * __+Pos__
 * __+Comp__
 * __+Superl__

Numerals are classified under:

 * __+Attr__
 * __+Card__
 * __+Ord__

Verb moods are:

 * __+Ind__
 * __+Pot__
 * __+Conj__
 * __+Imprt__
 * __+Opt__
 * __+Hort__
 * __+Mod/appr__ approximative imperfective
 * __+Mod/des__ desiderative
 * __+Mod/futappr__ approximative futuritive
 * __+Mod/hyp__ hyperprobablitative
 * __+Mod/int__ interrogative
 * __+Mod/narr__ narrative
 * __+Mod/nec__ necessitativee
 * __+Mod/obl__ obligative
 * __+Mod/rep__ reputative
 * __+Mod/sup__ superprobabilitative
 * __+Mod/perfappr__ approximative perfective
 * __+Mod/perfprob__ perfective probabilitative
 * __+Mod/prob__ imperfective probabilitative


Verb tenses are:

 * __+Aor__
 * __+Prt__
 * __+Prt1__
 * __+Prt2__

Verb personal forms are:

Subject

One of the two following

 * __+Sg1__
 * __+Sg2__
 * __+Sg3__
 * __+Pl1__
 * __+Pl2__
 * __+Pl3__

 * __+ScSg1__
 * __+ScSg2__
 * __+ScSg3__
 * __+ScDu1__
 * __+ScDu2__
 * __+ScDu3__
 * __+ScPl1__
 * __+ScPl2__
 * __+ScPl3__

Object
 * __+OcSg3__
 * __+OcDu3__
 * __+OcPl3__

Other verb forms are

 * __+InfImprf__
 * __+InfPrf__
 * __+PrcImprf__
 * __+PrcPrf__
 * __+PrcNeg__
 * __+PrcFut__
 * __+GerFin__
 * __+Subord__
 * __+Aud	__
 * __+Evas	__
 * __+Ger 	__
 * __+ConNeg__
 * __+ConNegII__
 * __+Neg 	__
 * __+ImprtII__
 * __+PrsPrc__
 * __+Sup 	__
 * __+VGen 	__
 * __+VAbess__

Abbreviated words are classified with:

 * __+ABBR__
 * __+ACR__

Special symbols are classified with:

 * __+CLB__
 * __+PUNCT__
 * __+LEFT__
 * __+RIGHT__

The verbs are syntactically split according to transitivity:

 * __+TV__
 * __+IV__

 * __+Aux__ auxilliary verb



Special multiword units are analysed with:

 * __+Multi__

Non-dictionary words can be recognised with:

 * __+Guess__

Question and Focus particles:

 * __+Qst__
 * __+Foc__


Semantics are classified with

 * __+Sem/Mal 	__
 * __+Sem/Fem 	__
 * __+Sem/Sur 	__
 * __+Sem/Plc 	__
 * __+Sem/Org	__
 * __+Sem/Obj	__
 * __+Sem/Ani	__
 * __+Sem/Hum	__
 * __+Sem/Plant	__
 * __+Sem/Group	__
 * __+Sem/Time 	__
 * __+Sem/Txt	__
 * __+Sem/Route	__
 * __+Sem/Measr__
 * __+Sem/Wthr	__
 * __+Sem/Build__
 * __+Sem/Edu	__
 * __+Sem/Veh	__
 * __+Sem/Clth	__


Derivations are classified under the morphophonetic form of the suffix, the
source and target part-of-speech.

 * __+V→N__
 * __+V→V__
 * __+V→A__
 * __+Der/xxx__
 * __+Der/MWN__ modifier without noun head
 * __+Der/Pr__ this is used with predication of nominals and deverbal modalities



!!Morphophonology

To represent phonologic variations in word forms we use the following
symbols in the lexicon files:
 * __ %{ая%} __ in Pros
 * __ %{оё%} __ in +N+Sg+Nom+PxPl3
 * __ %{рл%}	 __ +N+Sg+Nom+PxSg2
 * __ %{аяуюØ%} __ хан+N+Sg+Acc+PxSg1: ханув, ханав
 * __ %{увм%} __ +N+Sg+Pros
 * __ %{вм%}	 __ +N+Sg+Nom+PxSg1

And the following triggers to control variation:
 * __ {front} __
 * __ {back} __
 * __ %^SCSG2 __ this allows n2d +V+Ind+Aor+ScSg2:%>н°%^SCSG2
 * __ %^PLNOM __ disallows i2e +N+Pl+Nom+PxDu1+Der/Pr+V+Ind+Aor+ScPl3
 * __ %^PalVariation __ This allows for тарД1%>д%{оё%}нзь

Protoletters for xfst:
 * __ %{ауоэØ%} __  А1:а А1:у А1:о А1:э schwa
 * __ %{ауоэиыØ%} __ before pros

This is the schwa or reduced vowel occurring after x in case endings

 * __А2__ Alternating between zero and а

 * __Д1__
 * __С1__
 * __Н1__
 * __Ӈ1__ = These are proto-glottals

 * __Г1__
 * __В1__
 * __Е1__
 * __Е2__
 * __Ы1__
 * __Ы2__ = These are for developing underlying morphology rules

!!Triggers

 * __%^A2O__ Initially this is used for the noun "я" to enable a:o
 * __%^A2I__ for я:и in пя
 * __%^MLenition__ м:в м:б
 * __%^VowLower__ vowel lowering ы:э у:о
 * __%^VowRaise__ э:ы о:у
 * __%^VowLoss__ stem-final vowel is lost in plural accusative form
 * __%^StemVowFronting__ хасава:хасев
 * __%^VowFronting__ хадась:хадэйнинзь
 * __%^PalLoss__ in combination with stem-final vowel loss
 * __%^HardFronting__ яля:ялэ

We have manually optimised the structure of our lexicon using the following
flag diacritics to restrict morhpological combinatorics:

 * __@P.NeedNoun.ON@__
 * __@D.NeedNoun.ON@__
 * __@C.NeedNoun@__

Object conjugation

 * __@P.CONJ.ObjAll@__
 * __@R.CONJ.ObjAll@__
 * __@C.CONJ@	__


!!!The Root lexicon


The word forms in Nenets start from the lexeme roots of basic
word classes, or optionally from prefixes:

 * __adjectives ;	__
 * __adpositions ;	__
 * __adverbs ;		__
 * __interjections ;__
 * __nouns ;		__
 * __pronouns ;	__
 * __propernouns ;	__
 * __quantifiers ;	__
 * __verbs ;		__


 * __V_NEWWORDS ;		__ This is for feeding new verbs.
 * __Punctuation ;__

 * __CONJUNCTION ;__
 * __SUBJUNCTION ;__
 * __INTERJECTION ;__
 * __POSTPOSITION ;__

















 * __LEXICON N_ӇЭ__ ӈэ:ӈэ 1  ProsSg -вна
Yaml: __xo, ngaeTS__

 * __LEXICON N_ӇЭ-Pal/Var__ ӈэ:ӈэ 1  ProsSg -вна
Yaml: __nyeTS__

 * __LEXICON N_Ё__ я:я 2 ProsSg -вна
Yaml: __ya, yaTS__



 * __LEXICON N_ПИ__ пя:пя 3 ProsSg -вна
Yaml: __pyi, pyaTS__

 * __LEXICON N_ТЫ__ ты: 4 ProsSg -вна
Yaml: __tyTS__




 * __LEXICON N_ХАВО__ ха: 5 ProsSg -вна
Yaml: __tyTS__



 * __LEXICON N_СЁЁ__ сё: 6 ProsSg -вна


 * __LEXICON N_ИБЕ__ и: 7 ProsSg -вна

 * __LEXICON N_ХАБИЕ__ хӑби:8ProsSg -вна

 * __LEXICON N_ПАНЫ__ пӑны:пӑн 9 ы!ProsSg -(э)вна


 * __LEXICON N_ХУСУВЭЙ__ хусувэй: 10 ProsSg -ювна


 * __LEXICON N_ХАНО__ хӑн: 11P ProsSg -увна
Yaml: __xano__



 * __LEXICON N_ТИРЕ__ тир: 12 ProsSg -увна

 * __LEXICON N_ЕД__ ед: 13 ProsSg -увна /-ювна

 * __LEXICON N_МАРАӇГЫ__ мӑраӈга: 14PProsSg -вна




 * __LEXICON N_ӇУДИ__ ӈуда: 15 ProsSg -вна
Yaml: __N-ngudiTS__

 * __LEXICON N_ЕСИ__ ая̆ха: 16PProsSg -вна
Yaml: __N-yaxaTS__


 * __LEXICON N_ӇОДИ__ ӈодя: 17 ProsSg -вна
Yaml: __N-ngodiTS__


 * __LEXICON N_ЯЛЭ__ яля: 18 ProsSg -вна

 * __LEXICON N_ХОБ__ хоба:хоба 19 ProsSg -вна
Yaml: __xob__

 * __LEXICON N_ТЁН__ тёня:тёня 20 ProsSg -вна
Yaml: __tyon__

 * __LEXICON N_ПИСЬ__ пися: 21 ProsSg -вна

 * __LEXICON N_ХАСЕВ__ хасава: 22 ProsSg -вна

 * __LEXICON N_ӇАНУ__ ӈӑно: 23 ProsSg -вна
Yaml: __nano__

 * __LEXICON N_ЯКЫ__ якэ: 24 ProsSg -вна

 * __LEXICON N_ӇУВО__ ӈумʼ:ӈум 25 ProsSg -(м)на
Yaml: __yam, ngumhTS__

 * __LEXICON N_НЮБЕ__ нюмʼ: 26  ProsSg -(м)на

 * __LEXICON N_МУНО__ муʼ:му 27  ProsSg -мна

 * __LEXICON N_ПОЁ__ поʼ:по 28  ProsSg -мна
Yaml: __poyo__

 * __LEXICON N_ВЫӇО__ выʼ:вы 29  ProsSg -мна /-мана

 * __LEXICON N_ИЛЪЕ__ илʼ:ил 30   ProsSg -мана
Yaml: __ilje__





 * __LEXICON N_НЕНЭЦИЕ__ ненэцьʼ:ненэць 30   ProsSg -мана
Yaml: __nyenecyh__

 * __LEXICON N_ПАХАЁ__ пӑхӑʼ: 31   ProsSg -мна

 * __LEXICON N_СЕРО__ серˮ: 32   ProsSg -мана / -мня

 * __LEXICON N_ТАРЕ__ тӑрˮ:тар 33   ProsSg -мня
Vowel variation

 * __LEXICON N_МАНСО__ мӑнˮ: 34   ProsSg -мна


 * __LEXICON N_МЯДО__ мяˮ:мя 35   ProsSg -мна
Yaml: __myadoTS__


 * __LEXICON N_ИДЕ__ иˮ: 36   ProsSg -мна
Yaml: __yidye__
 * __!:Д1 POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl









 * __LEXICON N_ӇЭ/ХАБИЕ__ ӈэ:ӈэ 1  ProsSg -вна
хӑби:8 ProsSg -вна


та:та 






 * __LEXICON NMN_ӇУДИ__ ӈуда: 15 ProsSg -вна
Yaml: __ngudi__
 * __POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl

 * __LEXICON NMN_ӇОДИ__
 * __POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl



 * __LEXICON NMN_ХОБ__ хоба:хоба 19 ProsSg -вна
Yaml: __xob__
 * __POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl







 * __LEXICON NMN_ПИСЬ__ пися: 21 ProsSg -вна
 * __POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl


 * __LEXICON NMN_ӇАНУ__ ӈӑно: 23 ProsSg -вна
 * __POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl

 * __LEXICON NMN_ӇУВО__ ӈумʼ:ӈум 25 
 * __:ʼ POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl




 * __LEXICON NMN_НЮБЕ__ нюмʼ: 26



 * __LEXICON NMN_МУНО__ муʼ: 27  ProsSg -мна


No n2d







 * __:Ӈ1 SGNOMSUF ;__ 
 * __:Ӈ1 SG-NOM-STEM ;__ 
 * __:Ӈ1 POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl

Where is the variation?

 * __LEXICON NMN_ТАРЕ__ тӑрˮ:тар 33   ProsSg -мня





 * __LEXICON N_ВАР/ТАРЕ__ мяˮ:мя 35   ProsSg -мна

 * __LEXICON NMN_ВАР__ мяˮ:мя 35   ProsSg -мна
Yaml: __waro__
 * __:Д1 POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl

 * __LEXICON NMN_МЯДО__ мяˮ:мя 35   ProsSg -мна
Yaml: __myado__
 * __:Д1 SGLOCSUF_Хна ;__ мякна
 * __:Д1 POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl

Where is the variation?

Where is the variation?
 * __:Д1 POSSESSA-PLURAL ;__ +Pl+Dat, +Pl+Loc, +Pl+Abl


 * __LEXICON N_ТЮСЕ__ тюˮ:тюсе 







 * __LEXICON	 N_САВНЕ__ 




 * __LEXICON	 N_ПЕНЗЕРЕ__ пензерˮ:пензер

 * __LEXICON	N_САБЦЬ__ сабць:сабць

 * __LEXICON N_МЕРЁ__ мерё:мерё



























































































































































































































































































!!!Verb inflection


!!ONE-SYLLABLE STEMS WITH STEM-FINAL VOWEL
 * __LEXICON IV_Е__ есь:е

















 * __LEXICON IV_ӇЭ__ ӈэсь:ӈэ










!!TWO-SYLLABLE STEMS WITH STEM-FINAL VOWEL
 * __LEXICON IV_НАМДА__ намдась:намда





 * __LEXICON IV_ЯКУ__ якась:яка

















 * __LEXICON IV_ХАДА__ хадась:хада

 * __LEXICON TV_ХАДА__ хадась:хада





!THREE-SYLLABLE STEMS WITH STEM-FINAL VOWEL



 * __+V+TV@P.CONJ.ObjAll@:00@P.CONJ.ObjAll@ V-NEW_ЛАХАНА       ; __ 3-syll




* Yaml: __V-yaqwlasj__




!ONE-SYLLABLE STEMS WITH STEM-FINAL CONSONANT
 * __LEXICON IV_МАН__ манзь:маН1
* Yaml: __manzj__







 * LEXICON TV_САС  манэць:манэ
  * Yaml: __V-manecj__







!TWO-SYLLABLE STEMS WITH STEM-FINAL CONSONANT
 * __LEXICON IV_НЭКАЛ__ 


 * __LEXICON IV_ӇАДИМ/ӇАРАМ__ 2013-12-16









!!AFTER +TV, +IV, +Aux, +Refl
Not yet written.

!!CONJUGATION BY STEM TYPE

!ONE-SYLLABLE STEMS WITH STEM-FINAL VOWEL

 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

V_refl 


 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut

V_refl 2013-03-04


 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut

* Yaml: __V-xosj__
 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut


!TWO-SYLLABLE STEMS WITH STEM-FINAL VOWEL
 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut


 * __LEXICON V-01_ЯКУ__ якась:яка
 *  PRC-NEG ; 	+PrcNeg +PrcFut


 * LEXICON V-01_НЕНЫ  2013-09-18 This is merely a copy of V-01_МЫ
 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

 * __ V_Fut_ӇГУ ; __ is this the stem to use for +Fut+Mod/prob
 *  PRC-NEG ; 	+PrcNeg +PrcFut

V_refl 2013-03-04
 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

* Yaml: __V-pewasj__





V_refl 

* Yaml: __V-xadabasj__


 *  PRC-NEG ; 	+PrcNeg +PrcFut

V_refl 
 *  PRC-NEG ; 	+PrcNeg +PrcFut
 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

!THREE-SYLLABLE STEMS WITH STEM-FINAL VOWEL
а > э in Pl Oc 
 *  PRC-NEG ; 	+PrcNeg +PrcFut

V_refl 2013-03-04  а > ы (ъя before х)
 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

 * __LEXICON V-01_ЯˮАВЛУ __ яˮавлась:яˮавла
 *  PRC-NEG ; 	+PrcNeg +PrcFut
 * :%^VowRaise PRC-NEG ; 	+PrcNeg +PrcFut

V_refl 2013-03-04

!ONE-SYLLABLE STEMS WITH STEM-FINAL CONSONANT
 * __LEXICON V-01_МАН__ манзь:маН1
* Yaml: __manzj__
 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut



 *  PRC-NEG ; 	+PrcNeg +PrcFut

 * LEXICON V-01_САС  манэць:манэ
  * Yaml: __V-manecj__

 * :С1 PRC-NEG_МАДАВЭЙ ; 	+PrcNeg +PrcFut


 * __LEXICON V-01_ТИР__

 *  PRC-NEG ; 	+PrcNeg +PrcFut


V_refl 2013-03-04

 *  PRC-NEG ; 	+PrcNeg +PrcFut


!TWOO-SYLLABLE STEMS WITH STEM-FINAL CONSONANT
 * __LEXICON V-01_НЭКАЛ__ нэкалць:нэкал

 *  PRC-NEG ; 	+PrcNeg +PrcFut

 *  PRC-NEG ; 	+PrcNeg +PrcFut



V_refl 2013-03-04

Mutual verbal conjugation
 * __LEXICON IND-AOR__ All except Sg3 Du3




































Preterite 1 # This should be for ConjPrt and NarrPrt also.














 * +Ind:%>я IND-AOR-RCSG1	;  This should be schwa or something

Other moods
сь in 2nd, 4th etc non-final syllable 









 * __LEXICON V_PREC __ Hort

































 * __+Mod/des:%>рава MUTUAL-PERSON-NON-OCPL_NORAISING ; __ Sg3 and Pl3








































 * __LEXICON SG3-PRED-AOR/PRET1 __ V_AUD picks up possessor indices and comes here

Mutual person ending for nonindicative moods


















This need separating 2013-04-23























Object


Reflexive


Reflexive Preterite

Non-finites





 * __+PrcFut:%>%{вм%}анда K ;__

 * __+PrcFut:%>%{вм%}нда K ;__ Should this form be here 2013-11-25


 * __+PrcFut:%>%{вм%}нда K ;__ Should this form be here 2013-11-25











 * __LEXICON V-NEW_НАМДА __ намдась:намда schwa-final








* Yaml: __V-xosjTS__


◊_subj

◊_obj 



 * __+PrcFut+Pred+Nom+PxSg1:%>вндадав K ; __ Vowel removed
 * __+PrcFut+Pred+Nom+PxSg1:%>вндадув K ; __ Vowel removed
 * __+PrcFut+Pred+Acc+PxSg1:%>вндадав K ; __ Vowel removed
 * __+PrcFut+Pred+Acc+PxSg1:%>вндадув K ; __ Vowel removed
























◊_subj





◊_obj 



◊_obj 













 * __LEXICON V-NEW_BI-SYLL-MUTUAL-RAISE/NO __ raise/no


 * __+PrcFut+Pred+Nom+PxSg1:%>вндадав K ; __ Vowel removed
 * __+PrcFut+Pred+Nom+PxSg1:%>вндадув K ; __ Vowel removed
 * __+PrcFut+Pred+Acc+PxSg1:%>вндадав K ; __ Vowel removed
 * __+PrcFut+Pred+Acc+PxSg1:%>вндадув K ; __ Vowel removed



























!!!Nenets twol file


!!Letters of the alphabet
 * __а б в г д е ё ж з и й к л м н ӈ о п р с т у ф х ц ч ш щ ъ ы ь э ю я__ 
 * __А Б В Г Д Е Ё Ж З И Й К Л М Н Ӈ О П Р С Т У Ф Х Ц Ч Ш Щ Ъ Ы Ь Э Ю Я__ 

 * __°:0__ Directly from Tapani Salminen extra short vowel

 * __ә:а__ Directly from Tapani Salminen schwa



!!Archiphonemes for vowels

 * %{ауоэØ%}:а  А1:а А1:у А1:о А1:э SCHWA
 * %{ауоэиыØ%}:0 before pros

 * А2:а  

 * Ы1:о   
 * Ы1:е  

 * Ы2:э  


!!Archiphonemes for glottals

 *  Н1:ʼ   
 *  Н1:н   
 *  Н1:0   
 *  Ӈ1:ʼ   
 *  Ӈ1:ӈ   
 *  Ӈ1:0   
 *  Д1:ˮ   
 *  Д1:д   
 *  Д1:0   
 *  С1:ˮ   
 *  С1:с   
 *  С1:0   

 *  %{ая%}:а          in Pros
 *  %{оё%}:о          in +N+Sg+Nom+PxPl3
 *  %{рл%}:0	    +N+Sg+Nom+PxSg2

 * __%{аяуюØ%}:0	__ хан+N+Sg+Acc+PxSg1: ханув, ханав

 * __%{увм%}:0	__ +N+Sg+Pros

 * __%{вм%}:0	__ +N+Sg+Nom+PxSg1

!!triggers

 *  %^SCSG2:0     this allows n2d +V+Ind+Aor+ScSg2:%>н°%^SCSG2
 *  %^PLNOM:0     disallows i2e +N+Pl+Nom+PxDu1+Der/Pr+V+Ind+Aor+ScPl3
 *  %^A2O:0      
 *  %^A2I:0        

 * __%^PalVariation:0__ This allows for тарД1%>д%{оё%}нзь

 *  %^MLenition:0  lenition
 *  %^VowLower:0  vowel lowering ы:э у:о
 *  %^VowRaise:0  vowel raising э:ы о:у
 *  %^VowLoss:0      stem-final vowel is lost in plural accusative
 *  %^StemVowFronting:0      хасава:хасев
 *  %^VowFronting:0      хадась:хадэйнинзь
 *  %^PalLoss:0      in combination with stem-final vowel loss тёня:тён
 *  %^HardFronting:0      яля:ялэ


!!Boundary symbols

 *  %>      
hash




















!!!Rules




__к: -> г after nasal glottal__


__к: to х after Vowels__

__nTod__

__Н1:н GlottalNasalToSurface__


__Н1:ӈ GlottalNasalToSurface__

__Ӈ1:ӈ GlottalNasalToSurface__

__Ӈ1:н GlottalNasalToSurface__



__Ӈ1:ъ GlottalNasalToSurface__

__Н1:0 GlottalNasalToSurface__


__Ӈ1:0 GlottalNasalToSurface__




__Д1:0 GlottalNonNasalToZERO LEFT__

__Д1:0 GlottalNonNasalToZERO LEFT__

RIGHT ARROW ONLY Д1:0

__С1:0 GlottalNonNasalToZERO__



__С1:ˮ UnderlyingToGlottal__

__Д1:ˮ UnderlyingToGlottal LEFT__


__Д1:ˮ UnderlyingToGlottal LEFT__

RIGHT ARROW ONLY Д1:ˮ


__Н1:ʼ UnderlyingToGlottal__


__с => ц affrication after Stop__


__с => з after nasal__

__v To m __


__%{рл%}:л__


__%{рл%}:р__

__%{рл%}:р__

__муН1%>мд examples:__

__му00нд examples:__


__0:а in single-syllable__
__°:а at end of stem__


__ʼ:н__





Second Vowel Center
__°:у in Pros LEFT__

__ә:у in extra short to у__



__ә:о in extra short to о__



__ә:и in extra short to и__



__ә:ы in extra short to ы__



__ә:э in extra short to э__

__ә:а in extra short to а__



__ма%>ˮ0м°н%{ая%} examples:__

__ма0ˮам0на examples:__

__0:э in Pros__

__0:о between two glottals__

__0:и after glottal__

__0:ы between two glottals__

__0:у between two glottals__



__0:у between two glottals__


__а:я VowelPalatalization left__


__%{ая%}:я VowelPalatalization left__

__%{ая%}:я VowelPalatalization right__


__%{оё%}:ё VowelPalatalization right__


The rule __%{ауоэØ%} <-> у__:

The rule __%{ауоэØ%} -> о__:

The rule __%{ауоэØ%} -> а__:

__%{ауоэØ%} -> а__

__%{ауоэØ%} -> а__

__%{ауоэØ%} -> а__




!!VOWEL LOWERING

__i2e StemFinalYToE LEFT__


__а:э in stem-internal position__

__a:o in я__


__a:i in мараӈгы__


__a:i in ӈуда__



__о:у word-final position__


__я:и word-final position__

__я:е in яха__


__а:у яˮавла:яˮавлу LEFT__

__а:у яˮавла:яˮавлу RIGHT__


__а:ю яˮавла:яˮавлу__
!!VOWEL LOSS

__а:ю яˮавла:яˮавлу__


__а:ю яˮавла:яˮавлу__

__я:0 Stem vowel loss in plural accusative__



!!CONSONANT CHANGES

__mToV__




__m loss before Labial followed by nonglottal cons or vows __

__н loss after glottal before д: __







__н loss after glottal before д: __

__r To 0 before glottal and р or л__

__r To 0 before glottal and р or л__
т:д <=>   Н1: %> _ а ;

__n to t after non-nasal glottal__

__d to t after non-nasal glottal__



The rule __ъ:0 with Conj after vowels__:


In the first context ...

In the second context ...




__ˮ:0__

!!Realization of glottal stops

!SURFACE CONSONANT


__х:с in яха__



__С1:с GlottalNonNasalToSurface__

__Д1:д GlottalNonNasalToSurface__







__ь:0 with  GlottalNonNasalToZERO__




